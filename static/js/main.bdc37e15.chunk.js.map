{"version":3,"sources":["external-files/me.png","componenets/ProgressBar.js","componenets/Company.js","scenes/Resume.js","serviceWorker.js","index.js"],"names":["module","exports","ProgressBar","skill_description","this","getSkillDescriptionText","skill_level","getSkillLevel","className","props","skill","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","1","2","3","4","React","Component","Company","job_title","company","year","bullets","map","bullet","index","key","Resume","id","src","resume_photo","alt","href","target","my_data","company_many","skill_many","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uhDAAAA,EAAOC,QAAU,IAA0B,gC,0KCGtBC,E,iLAEb,IAAIC,EAAoBC,KAAKC,0BACzBC,EAAcF,KAAKG,gBAEvB,OAAO,yBAAKC,UAAU,QAClB,2CAAiBJ,KAAKK,MAAMC,MACxB,0BAAMF,UAAU,SACfL,IAIL,yBAAKK,UAAU,YACX,yBAAKA,UAAU,0BAA0BG,KAAK,cAAcC,MAAO,CAACC,MAAM,GAAD,OAAKP,EAAL,MACpEQ,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,Y,gDAiBhE,OAT+B,IAA3BZ,KAAKK,MAAMH,YACC,WAEPF,KAAKK,MAAMH,aAAe,EACnB,eAGA,W,sCAahB,MAP0B,CACtBW,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,KAEkChB,KAAKK,MAAMH,iB,GAzCnBe,IAAMC,WCA1BC,E,iLAEb,OAAO,6BACH,wBAAIf,UAAU,cACTJ,KAAKK,MAAMe,UADhB,MAC6B,0BAAMhB,UAAU,SAASJ,KAAKK,MAAMgB,QAApC,KAD7B,IACkF,0BAAMjB,UAAW,QAAjB,WAA8BJ,KAAKK,MAAMiB,KAAzC,OAE9E,4BACKtB,KAAKK,MAAMkB,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,GAAQD,Y,GAP1CR,IAAMC,W,uBCItBU,E,YAEjB,aAAe,uE,sEAKX,OAAO,yBAAKxB,UAAU,mBAClB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,2BACX,yBAAMyB,GAAG,eAAeC,IAAKC,IAAcC,IAAI,0BAEnD,yBAAK5B,UAAU,uCACX,wBAAIA,UAAU,QAAd,wBACA,wBAAIA,UAAU,eAAd,qCACA,wBAAIA,UAAU,eACV,4BACI,uBAAG6B,KAAK,oDAAqDC,OAAO,UAChE,uBAAG9B,UAAU,4BAGrB,4BACI,uBAAG6B,KAAK,kCAAmCC,OAAO,UAC9C,uBAAG9B,UAAU,6BAMjC,6BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,eAAf,YACA,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAb,wSAIR,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,eAAf,mBACA,yBAAKA,UAAU,aACV+B,EAAQC,aAAaZ,KAAI,SAAAH,GAAO,OAC7B,kBAAC,EAAYA,SAK7B,yBAAKjB,UAAU,mBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aACT,uBAAGA,UAAU,sBADjB,0BAGA,uBAAGA,UAAU,aACT,uBAAGA,UAAU,oBADjB,gCAKR,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,aACV+B,EAAQE,WAAWb,KAAI,SAAAlB,GAAK,OAAI,kBAAC,EAAgBA,EAAjB,kB,GA/D7BW,IAAMC,WCKtBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,SD6H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.bdc37e15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.04c267e7.png\";","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default class ProgressBar extends React.Component {\n    render() {\n        let skill_description = this.getSkillDescriptionText()\n        let skill_level = this.getSkillLevel()\n\n        return <div className=\"my-3\">\n            <h3>            {this.props.skill}\n                <span className=\"level\">\n                {skill_description}\n            </span>\n            </h3>\n\n            <div className=\"progress\">\n                <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{width: `${skill_level}%`}}\n                     aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n        </div>\n    }\n\n    //skillLevel should be between 1 and 4\n    getSkillDescriptionText(){\n        let ret_value = ''\n        if (this.props.skill_level === 1) {\n            ret_value = 'Beginner'\n        }\n        else if (this.props.skill_level <= 3) {\n            ret_value = 'Intermediate'\n        }\n        else {\n            ret_value = 'Expert'\n        }\n        return ret_value\n    }\n\n    getSkillLevel() {\n        let skill_percentage_map ={\n            1: 30,\n            2: 50,\n            3: 70,\n            4: 100\n        }\n        let skill_percent = skill_percentage_map[this.props.skill_level]\n        return skill_percent\n    }\n}\n\nProgressBar.propTypes = {\n    skill: PropTypes.string.isRequired,\n    skill_level: PropTypes.number.isRequired\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default class Company extends React.Component {\n    render() {\n        return <div>\n            <h3 className=\"card-title\">\n                {this.props.job_title} - <span className=\"place\">{this.props.company} </span> <span className={\"year\"}>{`(${this.props.year})`}</span>\n            </h3>\n                <ul>\n                    {this.props.bullets.map((bullet,index) => <li key={index}>{bullet}</li>)}\n                </ul>\n        </div>\n    }\n}\n\nCompany.propTypes = {\n    job_title: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired\n}\n\n","import React from \"react\";\nimport ProgressBar from \"../componenets/ProgressBar\"\nimport Company from \"../componenets/Company\";\nimport resume_photo from \"../external-files/me.png\"\nimport my_data from '../external-files/resume.json';\n\n\nexport default class Resume extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return <div className=\"container-fluid\">\n            <div className=\"row header\">\n                <div className=\"col-8 col-lg-3 offset-2\">\n                    <img  id=\"resume-photo\" src={resume_photo} alt=\"Konstantin Rezchikov\"></img>\n                </div>\n                <div className=\"col-8 offset-2 col-lg-4 offset-lg-0\">\n                    <h1 className=\"name\">Konstantin Rezchikov</h1>\n                    <h2 className=\"description\">Software Engineer | Web Developer</h2>\n                    <ul className=\"list-inline\">\n                        <li>\n                            <a href=\"https://www.linkedin.com/in/konstantin-rezchikov/\"  target=\"_blank\">\n                                <i className=\"fab fa-linkedin fa-3x\"></i>\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://github.com/krezchikov42\"  target=\"_blank\">\n                                <i className=\"fab fa-github fa-3x\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div>\n                <div className=\"row body\">\n                    <div className=\"col-12 col-lg-7 offset-lg-1\">\n                        <div className=\"card bg-light my-3\">\n                            <div className=\"card-header\">About Me</div>\n                            <div className=\"card-body\">\n                                <p className=\"card-text\">Hi there! I'm Konstantin Rezchikov, a computer engineering and computer science student at Northeastern University.\n                                    I've always loved the fact that I can bring someone's thoughts to life by typing a few lines of code. I'm excited by entrepreneurship and making products to change the world.</p>\n                            </div>\n                        </div>\n                        <div className=\"card bg-light my-3\">\n                            <div className=\"card-header\">Work Experience</div>\n                            <div className=\"card-body\">\n                                {my_data.company_many.map(company =>\n                                    <Company {...company}></Company>)}\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"col-12 col-lg-3\">\n                        <div className=\"card bg-light my-3\">\n                            <div className=\"card-header\">Contact me</div>\n                            <div className=\"card-body\">\n                                <p className=\"card-text\">\n                                    <i className=\"fas fa-map-marked\"></i> Boston, Massachussets\n                                </p>\n                                <p className=\"card-text\">\n                                    <i className=\"fas fa-envelope\"></i> rezchikov.k@husky.neu.edu\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"card bg-light my-3\">\n                            <div className=\"card-header\">Skills</div>\n                            <div className=\"card-body\">\n                                {my_data.skill_many.map(skill => <ProgressBar {...skill}> </ProgressBar>)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Resume from \"./scenes/Resume\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Resume />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}